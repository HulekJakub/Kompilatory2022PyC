LexToken(PREPROCESSOR_LINE,'#include <stdio.h>\n',1,0)
LexToken(INT,'int',3,20)
LexToken(ID,'addNumber',3,24)
LexToken(L_BRACKET,'(',3,33)
LexToken(INT,'int',3,34)
LexToken(ID,'a',3,38)
LexToken(COMMA,',',3,39)
LexToken(INT,'int',3,41)
LexToken(ID,'b',3,45)
LexToken(R_BRACKET,')',3,46)
LexToken(L_BRACE,'{',4,48)
LexToken(RETURN,'return',5,54)
LexToken(ID,'a',5,61)
LexToken(PLUS,'+',5,63)
LexToken(ID,'b',5,65)
LexToken(SEMICOLON,';',5,66)
LexToken(R_BRACE,'}',6,68)
LexToken(INT,'int',8,71)
LexToken(ID,'noMainFunction',8,75)
LexToken(L_BRACKET,'(',8,89)
LexToken(R_BRACKET,')',8,90)
LexToken(L_BRACE,'{',9,92)
LexToken(INT,'int',10,98)
LexToken(ID,'num1',10,102)
LexToken(ASSIGN,'=',10,107)
LexToken(INTEGER,'2',10,109)
LexToken(SEMICOLON,';',10,110)
LexToken(INT,'int',11,116)
LexToken(ID,'num2',11,120)
LexToken(SEMICOLON,';',11,124)
LexToken(ID,'num2',12,130)
LexToken(ASSIGN,'=',12,135)
LexToken(INTEGER,'3',12,137)
LexToken(SEMICOLON,';',12,138)
LexToken(INT,'int',13,144)
LexToken(ID,'num3',13,148)
LexToken(ASSIGN,'=',13,153)
LexToken(ID,'addNumber',13,155)
LexToken(L_BRACKET,'(',13,164)
LexToken(ID,'num1',13,165)
LexToken(COMMA,',',13,169)
LexToken(ID,'num2',13,171)
LexToken(R_BRACKET,')',13,175)
LexToken(SEMICOLON,';',13,176)
LexToken(IF,'if',14,182)
LexToken(L_BRACKET,'(',14,184)
LexToken(ID,'num3',14,185)
LexToken(EQUAL,'==',14,190)
LexToken(INTEGER,'5',14,193)
LexToken(R_BRACKET,')',14,194)
LexToken(L_BRACE,'{',15,200)
LexToken(PRINTF,'printf',16,210)
LexToken(L_BRACKET,'(',16,216)
LexToken(ID,'num3',16,217)
LexToken(R_BRACKET,')',16,221)
LexToken(SEMICOLON,';',16,222)
LexToken(R_BRACE,'}',17,228)
LexToken(ELSE,'else',18,234)
LexToken(IF,'if',18,239)
LexToken(L_BRACKET,'(',18,242)
LexToken(ID,'num3',18,243)
LexToken(EQUAL,'==',18,248)
LexToken(DECIMAL,'5.0',18,251)
LexToken(R_BRACKET,')',18,254)
LexToken(L_BRACE,'{',19,260)
LexToken(PRINTF,'printf',20,270)
LexToken(L_BRACKET,'(',20,276)
LexToken(ID,'num3',20,277)
LexToken(R_BRACKET,')',20,281)
LexToken(SEMICOLON,';',20,282)
LexToken(R_BRACE,'}',21,288)
LexToken(ELSE,'else',22,294)
LexToken(IF,'if',22,299)
LexToken(L_BRACKET,'(',22,302)
LexToken(ID,'num3',22,303)
LexToken(EQUAL,'==',22,308)
LexToken(INTEGER,'4',22,311)
LexToken(R_BRACKET,')',22,312)
LexToken(L_BRACE,'{',23,318)
LexToken(PRINTF,'printf',24,328)
LexToken(L_BRACKET,'(',24,334)
LexToken(STRING,'"Not good, but close."',24,335)
LexToken(R_BRACKET,')',24,357)
LexToken(SEMICOLON,';',24,358)
LexToken(R_BRACE,'}',25,364)
LexToken(ELSE,'else',26,370)
LexToken(L_BRACE,'{',27,379)
LexToken(PRINTF,'printf',28,389)
LexToken(L_BRACKET,'(',28,395)
LexToken(STRING,'"Not good."',28,396)
LexToken(R_BRACKET,')',28,407)
LexToken(SEMICOLON,';',28,408)
LexToken(R_BRACE,'}',29,414)
LexToken(RETURN,'return',30,420)
LexToken(INTEGER,'0',30,427)
LexToken(SEMICOLON,';',30,428)
LexToken(R_BRACE,'}',31,430)